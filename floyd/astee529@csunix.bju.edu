#include <syscall.h>

// only implementation for ints right now.  strings are to come in phase 5
int gte(int op1, int op2) {
    if(op1 >= op2)
        return -1;
    else
        return 0;
}

int gt(int op1, int op2) {
    if(op1 > op2)
        return -1;
    else
        return 0;
}

int equals(int op1, int op2) {
    if(op1 == op2)
        return -1;
    else
        return 0;
}

int unaryPlus(int num) {
  if(num < 0) {
    num = -1 * num;
  }
  return num;
}

int readint() {
    char buf[4];
    //read(0, buf, sizeof(4));
    return *buf - 48;
}

void writeint(int num) {
  char buf[20];
  char result[20] = "0\n";
  char *pos = buf;
  char *writeptr = result;
  int numWritten;
 
  // Handle negative numbers
  if (num < 0) {
    *writeptr++ = '-';
    num = -num;
  }
  
  if (num > 0) {
      
    // Build the number in reverse order
    while (num > 0) {
      *pos++ = (num % 10) + '0';
      num /= 10;
    }
    pos--;
    
    // Now we need to copy the results into the output buffer, reversed
    while (pos > buf) {
      *writeptr++ = *pos--;
    }
    *writeptr++ = *pos;
    *writeptr++ = 10;
    *writeptr++ = 0;
  } else {
    // number is 0; use default result
    writeptr = result + 3;
  }
  
  write(1, result, (writeptr - result) - 1);
  
}
